services:
  video-merger-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - SOURCE_BUCKET=source-videos
      - TARGET_BUCKET=merged-videos
      - TEMP_DIR=/app/temp
      - LOG_LEVEL=INFO
    volumes:
      - ./temp:/app/temp
    depends_on:
      - minio
    networks:
      - video-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - video-network

  # MinIO Client to create buckets
  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/source-videos --ignore-existing;
      /usr/bin/mc mb myminio/merged-videos --ignore-existing;
      /usr/bin/mc policy set public myminio/source-videos;
      /usr/bin/mc policy set public myminio/merged-videos;
      exit 0;
      "
    networks:
      - video-network

volumes:
  minio_data:

networks:
  video-network:
    driver: bridge
